name: acr-push

on:
  push:
    branches:
      - master

env:
  AZURE_CREDENTIALS: "{
  "clientId": "f23fb1fe-ae62-4bde-b649-cc6ba4ac5999",
  "clientSecret": "pbj8Q~Xz0fUXaMJV2cKpVB~b6vn3Ch0lBL84Lc6e",
  "subscriptionId": "8c8095cc-566b-40b7-8615-4716c93863e2",
  "tenantId": "1bd3f08b-8a17-44a5-9c98-1ea235caf2e8",
  "activeDirectoryEndpointUrl": "https://login.microsoftonline.com",
  "resourceManagerEndpointUrl": "https://management.azure.com/",
  "activeDirectoryGraphResourceId": "https://graph.windows.net/",
  "sqlManagementEndpointUrl": "https://management.core.windows.net:8443/",
  "galleryEndpointUrl": "https://gallery.azure.com/",
  "managementEndpointUrl": "https://management.core.windows.net/"
}"
  ACR_REPO_NAME: "testing"  # Your Docker image name
  TAG: "latest"
  CONTAINER_APP_NAME: "testing1"  # From az containerapp list
  RESOURCE_GROUP: "demo"  # From az containerapp list
  CONTAINERAPPS_ENVIRONMENT: "managedEnvironment-demo-8ee1"  # Needed for create if missing

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.ACR_REPO_NAME }}:${{ env.TAG }} .
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.ACR_REPO_NAME }}:${{ env.TAG }}
